pipeline:
  type: Ingest

  # These parameters will be used to name files.
  location_id: "nwtc"
  dataset_name: "lidar"
  qualifier: "halo_xrp"
  data_level: "b0"  # If not applying QC this should be set to "a0"

dataset_definition:
  attributes:
    title: "Lidar Halo XRP NWTC"
    description: "Ingest for the XRP Halo Lidar at the NREL Flatirons Campus"
    conventions: MHKiT-Cloud Data Standards v. 1.0
    institution: NREL
    code_url: https://github.com/a2edap/ingest-awaken
    location_meaning: "NREL Flatirons Campus"

  dimensions:
    time:
        length: unlimited
    range_gate:
        length: unlimited

  variables:

    time:
      input:
        name: Timestamp
        # converter:
        #   classname: tsdat.utils.converters.StringTimeConverter
        #   parameters:
        #     timezone: UTC
        #     time_format: "%Y/%m/%d %H:%M:%S"
      dims: [time]
      type: long
      attrs:
        long_name: Time (UTC)
        standard_name: time
        units: seconds since 1970-01-01T00:00:00
    
    range_gate:
      input:
        name: range_gate
      dims: [range_gate]
      type: int
      attrs:
        long_name: Range gate

    distance:
      dims: [range_gate]
      type: int
      attrs:
        long_name: Distance LOS measurement is taken from Lidar
        units: m

    SNR:
      dims: [time, range_gate]
      type: float
      attrs:
        long_name: Signal to Noise Ratio
        units: dB
        _FillValue: -9999
    
    azimuth:
      input:
        name: Azimuth (degrees)
      dims: [time]
      type: float
      attrs:
        long_name: Azimuth
        units: deg

    elevation:
      input:
        name: Elevation (degrees)
      dims: [time]
      type: float
      attrs:
        long_name: Elevation
        units: deg

    pitch:
      input:
        name: Pitch (degrees)
      dims: [time]
      type: float
      attrs:
        long_name: Pitch
        units: deg

    roll:
      input:
        name: Roll (degrees)
      dims: [time]
      type: float
      attrs:
        long_name: Roll
        units: deg
    
    doppler:
      input:
        name: Doppler
      dims: [time, range_gate]
      type: float
      attrs:
        long_name: Doppler
        units: m/s
        valid_delta: 1

    intensity:
      input:
        name: Intensity
      dims: [time, range_gate]
      type: float
      attrs:
        long_name: Intensity
        units: "1"
    
    latitude:
      data: 71.323  # TODO – Dan
      type: float
      attrs:
        long_name: "North latitude"
        standard_name: "latitude"
        comment: "Recorded lattitude at the instrument location"
        units: "degree_N"
        valid_range: [-90.f, 90.f]

    longitude:
      data: -156.609  # TODO – Dan
      type: float
      attrs:
        long_name: "East longitude"
        standard_name: "longitude"
        comment: "Recorded longitude at the instrument location"
        units: "degree_E"
        valid_range: [-180.f, 180.f]
    
    altitude:
      data: 4000.0  # TODO – Dan
      type: float
      attrs:
        long_name: "Altitude"
        standard_name: "altitude"
        comment: "Recorded altitude at the instrument location"
        units: m
    
#-----------------------------------------------------------------
quality_management:

  #---------------------------------------------------------------
  manage_missing_coordinates:
    checker:
      classname: tsdat.qc.checkers.CheckMissing
    handlers:
      - classname: tsdat.qc.handlers.FailPipeline
    variables:
      - COORDS

  manage_coordinate_monotonicity:
    checker:
      classname: tsdat.qc.checkers.CheckMonotonic
    handlers:
      - classname: tsdat.qc.handlers.SortDatasetByCoordinate
        parameters:
          ascending: True
          correction: "Coordinate data was sorted in order to ensure monotonicity."
    variables:
      - COORDS

  #---------------------------------------------------------------
  manage_missing_values:
    checker:
      classname: tsdat.qc.checkers.CheckMissing
    handlers:
      - classname: tsdat.qc.handlers.RemoveFailedValues
      - classname: tsdat.qc.handlers.RecordQualityResults
        parameters:
          bit: 1
          assessment: Bad
          meaning: "Value is equal to _FillValue or NaN"
    variables:
      - DATA_VARS
    exclude: [latitude, longitude, altitude]

  manage_valid_delta:
    checker:
      classname: tsdat.qc.checkers.CheckValidDelta
      parameters:
        dim: time  # specifies the dimension over which to compute the delta
    handlers:
      - classname: tsdat.qc.handlers.RecordQualityResults
        parameters:
          bit: 2
          assessment: "Indeterminate"
          meaning: "Difference between current and previous values exceeds valid_delta."
    variables:
      - doppler
